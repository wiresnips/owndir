

plugins
=======
	I need to actually invoke these from build-server.js


crashes and failed compilation
==============================

	I must be able to detect these, right?


how to deal with filesystem updates?
====================================

	

why is my generated code out-of-date unless I nuke .homestead-build ?
=====================================================================


Android?
========


plugin distribution mechanism
=============================
	a postinstall script that moves the plugin from node_modules up a level

	then, you can `npm install @homestead/fancy-plugin`, and it'll just work, I think ...

	can I get this working cross-platform?
		the way to do this is, to use javascript instead of bash

		so, let's imagine a package, @homestead/plugin-utils
		plugins can require it, and it will provide a postinstall.js script

		then, in package.json, you have this:
			"postinstall": "node node_modules/homestead-plugin-utils/postinstall.js my-plugin"




better management of route priority
===================================

	if plugins are going to be providing functinoality by adding routes (and they are)

	then, I need some way for them to play nicely with each other

	for NOW, I can do this with plugin names (because I am the only one writing anything)




name ideas
==========
	homestead
		- competing service
		- ancaps

	central

	bradford

	croft
	planterbox
	jardinier
